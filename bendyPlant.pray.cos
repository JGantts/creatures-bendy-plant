**CAOS2PRAY
*# Pray-File "bendyPlant.agents"
*# DS-Name "Bendy Plant"
*# Agent Animation File = "bendyPlant.c16"
*# Agent Sprite First Image = 3
*# desc = "From the mysterious world of Leyhorn. The seasons there are extreme and these plants have had to adapt.\n\nManually injected seeds are inedible and invisible to creatures.\n\nImages by Linda.\nCode by Zzzzoot."

*# attach bendyPlant.c16 bendyPlant.catalogue

new: simp 2 3 24401 "bendyPlant" 1 0 447
*First seed is inedible and invisible to creatures. Otherwise it'd be hard to start a plant.
setv va00 195
addv va00 16
attr va00
*bhvr 48
perm 64
elas 15
accg 6
fric 95
setv name "sean" 0

setv va42 0
doif va42 = 0
* actual injection location
*	in comms room
	setv va00 game "CreatorY"
	subv va00 hght
	mvto game "CreatorX" va00
elif va42 = 1
* testing injection location
*	near hand. Random x offset, so help scatter seeds
	setv va00 mopy
	mvsf mopx va00
endi
tick 200

scrp 2 3 24401 9
	doif carr <> null or fall <> 0
* we're being carried or we're falling
*	probably not a good time to sprout.
*	but we are in a rush so hurry it up
		tick 20
		stop
	endi
	doif rtyp room ownr < 5 or rtyp room ownr > 7
*dbg: outs "<<bendy plant seed>> not soil"
		gsub rot
	endi
*	check room properties
*		Get Local Room ID
	targ ownr
	setv va00 grap posx posy
*		really dark?
	doif prop va00 1 < .01
*dbg: outs "<<bendy plant seed>> too dark"
		gsub rot
	endi
	doif prop va00 3 < .01
*dbg: outs "<<bendy plant seed>> too dry"
		gsub rot
	endi
	doif prop va00 4 < .01
*dbg: outs "<<bendy plant seed>> too few nutrients"
		gsub rot
	endi
	setv va40 0
*	check population touching
	etch 2 4 24401
		gsub rot
*dbg: outs "<<bendy plant seed>> stop touching me!"
	next
*	check population for 1 within 100 pixels
	rnge 100
	esee 2 4 24401
		addv va40 1
	next
	doif va40 > 1
*dbg: outs "<<bendy plant seed>> too crowded, 100"
		gsub rot
	endi
*	check population for 5 within 1000 pixels
	rnge 1000
	esee 2 4 24401
		addv va40 1
	next
	doif va40 > 5
*dbg: outs "<<bendy plant seed>> too crowded, 1000"
		gsub rot
	endi
*	check map boundries
	doif obst _UP_ < 130
*dbg: outs "<<bendy plant seed>> not enough room upwards"
		gsub rot
	endi
	mvby 0 -100
	doif obst LEFT < 35 or obst RGHT < 35
*dbg: outs "<<bendy plant seed>> not enough room left or right"
		gsub rot
	endi
	mvby 0 100
*dbg: outs "Woo! I'm about to sprout!"

	inst
* calculate location of new plant agent
	setv va00 posl
	subv va00 20
	setv va01 post
	subv va01 108
	new: comp 2 4 24401 "bendyPlant" 52 1 292
*	random image (facing direction and stalk type)
	setv ov00 rand 0 3
	doif ov00 = 0 or ov00 = 2
*	facing right
*		pose 0
		sets name "dir" "right"
	else
*	facing left
		pose 1
		sets name "dir" "left"
	endi
	sets name "state" "sprout"
*	name "sean" for pose etc.
*		set from seed
*		(injected seed is spring, so it'll always grow)
	setv name "sean" mame "sean"

*	Spring color
	setv va10 rean "bendyPlantColor Spring"
	subv va10 1
	sets va11 read "bendyPlantColor Spring" rand 0 va10
	sets va12 subs va11 1 3
	sets va13 subs va11 5 3
	sets va14 subs va11 9 3
	setv ov10 stoi va12
	setv ov11 stoi va13
	setv ov12 stoi va14

*	Summer color
	setv va10 rean "bendyPlantColor Summer"
	subv va10 1
	sets va11 read "bendyPlantColor Summer" rand 0 va10
	sets va12 subs va11 1 3
	sets va13 subs va11 5 3
	sets va14 subs va11 9 3
	setv ov13 stoi va12
	setv ov14 stoi va13
	setv ov15 stoi va14

*	Autunm color
	setv va10 rean "bendyPlantColor Autumn"
	subv va10 1
	sets va11 read "bendyPlantColor Autumn" rand 0 va10
	sets va12 subs va11 1 3
	sets va13 subs va11 5 3
	sets va14 subs va11 9 3
	setv ov16 stoi va12
	setv ov17 stoi va13
	setv ov18 stoi va14

*	Winter color
	setv va10 rean "bendyPlantColor Winter"
	subv va10 1
	sets va11 read "bendyPlantColor Winter" rand 0 va10
	sets va12 subs va11 1 3
	sets va13 subs va11 5 3
	sets va14 subs va11 9 3
	setv ov19 stoi va12
	setv ov20 stoi va13
	setv ov21 stoi va14

	tick 20
	mvto va00 va01
	kill ownr
	slow

	subr rot
		altr room ownr 4 0.1
* fade out
		setv va00 0
		loop
			alph va00 1
			addv va00 8
			wait 1
		untl va00 >= 256
		kill ownr
		stop
	retn
endm

scrp 2 4 24401 9
	doif mame "state" = "sprout"
		doif mame "dir" = "right"
			base 0
		else
			base 1
		endi
* stem grow spring
		pose 2
		wait 20
		pose 4
*set image offset for using the alternative mature stalk
		base ov00
		wait 20
		pose 6
		sets mame "state" "stalk"
		tick 50
	elif mame "state" = "stalk"
		gsub checkSean
*set image offset for using the alternative mature stalk
		base ov00
* flower grow
		doif mame "dir" = "right"
			setv va01 53
		else
			setv va01 61
		endi
		inst
		pat: dull 1 "bendyPlant" va01 0 0 1
		part 1
*		set flower color based on season
		doif mame "sean" = 0
			tint mv10 mv11 mv12 128 128
		elif mame "sean" = 1
			tint mv13 mv14 mv15 128 128
		elif mame "sean" = 2
			tint mv16 mv17 mv18 128 128
		elif mame "sean" = 3
			tint mv19 mv20 mv21 128 128
		endi
*		grow flower
		wait 20
		pose 1
		wait 20
		pose 2
		wait 50
		sets mame "state" "flower"
		tick 500
		slow
	elif mame "state" = "flower"
		gsub checkSean
*		*dbg: outs "shooting!"
		part 1
*shoot a seed!
*	flower close
		pose 3
		wait 20
		pose 4
		wait 40
*	flower shoot
		anim [5 5 6 4]
		over
		wait 40
*	flower close
		pose 3
		wait 20
		pose 2
	endi

*	wait 100
*
*	wait 100
*
*	slow



	subr checkSean
*		*dbg: outs "checking season"
		doif mame "sean" <> sean
*			plant's internal season needs to be fixed
			doif mame "state" = "sprout"
*				Don't really do anything
			else
*dbg: outs "fixing sean and pose. new sean:"
*dbg: outv sean
				wait 40
*	   actually elif mame "state" = "stalk" or mame "state" = "flower"
*				Fix it
				inst
				lock
				setv mame "sean" sean
				doif mame "sean" = 0
* change to spring
					doif mame "state" = "flower"
*				flower wilt
						part 1
						pose 7
						wait 20
*				flower fade out
						setv va00 0
						loop
							alph va00 1
							addv va00 8
							wait 1
						untl va00 >= 256
						ucln
						pat: kill 1
					endi
*				stem melt
					part 0
					pose 44
					wait 20
					pose 48
					wait 20
*				stem spring
					pose 6
					wait 100
					base 0
					doif mame "state" = "flower"
*					flower grow spring
*					set flower direction
						doif mame "dir" = "right"
							setv va01 53
						else
							setv va01 61
						endi
						inst
						pat: dull 1 "bendyPlant" va01 0 0 1
						part 1
						tint mv10 mv11 mv12 128 128
*					grow flower
						wait 20
						pose 1
						wait 20
						pose 2
					endi
					wait 200
				elif mame "sean" = 1
* change to summer
*					change stem
					part 0
					pose 18
					doif mame "state" = "flower"
*						change flower
						part 1
						tint mv13 mv14 mv15 128 128
					endi
					wait 200
				elif mame "sean" = 2
* change to autumn
*				stem autumn
					part 0
					pose 24
					doif mame "state" = "flower"
						part 1
						tint mv16 mv17 mv18 128 128
					endi
					wait 200
				elif mame "sean" = 3
* change to winter
					doif mame "state" = "flower"
*					flower wilt
						part 1
						pose 7
						wait 20
*					flower fade out
						setv va00 0
						loop
							alph va00 1
							addv va00 8
							wait 1
						untl va00 >= 256
						ucln
						pat: kill 1
					endi
*				stem freeze
					part 0
					pose 30
					wait 20
					pose 34
					wait 20
*				stem winter
					pose 38
					wait 50
					doif mame "state" = "flower"
*					flower grow winter
*					set flower direction
						doif mame "dir" = "right"
							setv va01 53
						else
							setv va01 61
						endi
						inst
						pat: dull 1 "bendyPlant" va01 0 0 1
						part 1
						tint mv19 mv20 mv21 128 128
*					grow flower
						wait 20
						pose 1
						wait 20
						pose 2
					endi
					wait 200
				endi
			endi
		endi
	retn
endm

rscr
enum 2 3 24401
	kill targ
next
enum 2 4 24401
	kill targ
next

endm